  <!DOCTYPE html>
  <html>
  <head>
    <title>Demo Sails</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


  <!--
  Stylesheets and Preprocessors
  ==============================

  You can always bring in CSS files manually with `<link>` tags, or asynchronously
  using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
  of Sails' conventional asset pipeline (boilerplate Gruntfile).

  By default, stylesheets from your `assets/styles` folder are included
  here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
  are supported. In production, your styles will be minified and concatenated into
  a single file.

  To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
  For example, here are a few things you could do:

  + Change the order of your CSS files
  + Import stylesheets from other directories
  + Use a different or additional preprocessor, like SASS, SCSS or Stylus
-->

<!--STYLES-->
<link rel="stylesheet" href="/styles/bootstrap.css">
<link rel="stylesheet" href="/styles/importer.css">
<link rel="stylesheet" href="/styles/style.css">
<!--STYLES END-->

<!--Added this so the client has access to the csrf tag and it's grabbed first service side on every page -->
</head>

<body>

  <nav class="navbar navbar-dark bg-inverse navbar-fixed-top">
    <div class="nav navbar-nav">
      <a class="nav-item nav-link active" href="/">Home <span class="sr-only"></span></a>

      <% if(!session.authentificated) { %>
      <a href="/chat/page" class="nav-item nav-link">Chat</a>
      <% } %>
      <% if (session.authenticated) { %>
      <li class="active"><a href="/user/show/<%= session.User.id %>"><%= session.User.name %> </a> </li>

      <% } %>
      <a href="/search" class="nav-item nav-link">Look into answers</a>
    </div>
    <div class="nav navbar-nav pull-xs-right">

      <% if (!session.authenticated) { %>
      <a class="btn btn-default navbar-btn navbar-right" href="/session/destroy">sign-out</a>
      <a class="nav-item nav-link" href="/question/new">Add a question</a>
      <a class="nav-item nav-link" href="/answer/new">give us your opinion</a>
      <% } %>

      <% if(!session.authentificated) { %>
      <a class="nav-item nav-link" href="/user/new">Get an account</a>
      <a class="nav-item nav-link" href="/user/login">Get connected</a>
      <% } %>
    </div>
  </nav>

  <div class="row">
    <div class="col-sm-1"></div>
    <div class="col-sm-10"><%- body %></div>
    <div class="col-sm-1"></div>
  </div>


  <!-- -------------------------------------------------------------------------------------------------------------------- -->
  <!-- a simple div in the body where the chat will appear -->
  <div id="chat"></div>
  <div id="presentation" class="modal"></div>


  <div style="height: 80px"></div>
  <footer class="footer">
    <div class="container">
      <p class="pull-xs-right">
        <a href="#">Back to top</a> &nbsp;

        <!-- inertion of a button to call the chat in a classic page -->
        <a href='#' onclick='chatCall()'>Chat</a> 
      </p>
      <p>
        <a href="/user/">list of user</a> &nbsp; 
        <a href="/question/">list of questions</a> &nbsp;
        <a href="/answer/">list of answers</a>
      </p>
    </div>
  </footer>

  <script>

    var chatShown = false;


// switch turn on or off the chat window
function chatCall() {
  if(chatShown) {
    chatShown = false;
    chatHide();
  }else{
    chatShown = true;
    chatShow();
  }
}

window.onload = function connection() {

  if(!getCookie('messageId')){
    document.cookie = "messageId = 0";


    var data = {currentUrl: ''};
    data.currentUrl = window.location.href;

    var chatRequest = "http://54.171.115.230:8080/chattest";
    var chatApi = new XMLHttpRequest();
    chatApi.open("POST", chatRequest);
    chatApi.setRequestHeader("Content-Type", "application/json");
    chatApi.send(JSON.stringify(data));

    chatApi.onreadystatechange = function () {
      if (chatApi.readyState == 4 && chatApi.status == 200) {
        responseAnalyse(chatApi.responseText);
      }
    }
  }
}

// switching on the chat window
function chatShow() {
// creating the window into the page
document.getElementById('chat').innerHTML = "<div id='chatFenetre' class='img-rounded'><div id='conversation' class='img-thumbnail'></div><input type='text' name='message' id='message' class='img-thumbnail' onkeypress='chatListener(event)'><button class='btn btn-sm btn-info' onclick='send()' id='chatBtn'>send</button><input type='checkbox' id='trueFalseProd'><input type='checkbox' id='trueFalseQuest'><input type='checkbox' id='trueFalseAge'><input type='checkbox' id='trueFalseColors'><input type='checkbox' id='trueFalseText'><input type='checkbox' id='trueFalseMulti'><input type='checkbox' id='trueFalsePhoto'><input type='checkbox' id='trueFalsePrice'><input type='checkbox' id='trueFalseTimeout'></div><input type='text' name='sessionId' style='display:none' value='<%= req.session.id %>' id='sessionId'>";
// prod, quest, age, colors, text, multi

//look for user name into the cookies
if(getCookie('user').length == 0){
  newUser();
}else{
  chatContentLoader();
}
}

function chatHide() {
  document.getElementById('chat').innerHTML = "";
}

// adding a new user to the cookie will be use next in the chat
function newUser() {
  var pseudo = prompt("What's your name ?");
  document.cookie = "user = " + pseudo;

  document.cookie = "sessionId = " + document.getElementById('sessionId').value;
  chatShow();
}

//Show the chat messsages and images to the user into the chat window
function chatContentLoader(){
  for (var i = 1; i < parseInt(getCookie('messageId')) + 1; i++) {

    if(getCookie(i + "author") != 'Server'){
      document.getElementById('conversation').innerHTML += "<div id='" + i + "messageCorpus' class='userCorpus msg'></div>";

    }else{
      document.getElementById('conversation').innerHTML += "<div id='" + i + "messageCorpus' class='serverCorpus msg'></div>";
    }

    document.getElementById(i + 'messageCorpus').innerHTML +=  "<dt>" + getCookie(i + "author") + " : </dt>";
    document.getElementById(i + 'messageCorpus').innerHTML += "<dd>" + getCookie(i + "message") + "</dd>";

    if(getCookie(i + "cat") == 'p'){
      document.getElementById(i + 'messageCorpus').innerHTML += "<div id='" + i + "picturesCorpus' class='picturesCorpus'></div>";
      for (var j = 0; j < getCookie( i + 'nbEntities'); j++) {

        document.getElementById(i + 'picturesCorpus').innerHTML += "<div class='chatImgDiv'><img class='img-thumbnail' src='" + getCookie(i + 'imgUrl' + j) + "' id='chatImg' name='image' onclick='javascript:displayModal(" + i + "," + j + ")'><p class='imgName'>" + getCookie(i + 'productName' + j) + "</p></div>";
      }
    }

    if(getCookie(i + "cat") == 'm'){
      document.getElementById(i + 'messageCorpus').innerHTML += "<div id='" + i + "multiCorpus' class='multiCorpus' ></div>";
      for (var j = 0; j < getCookie( i + 'nbEntities'); j++) {

        if(getCookie( i + 'choosed') == j){
          document.getElementById(i + 'multiCorpus').innerHTML += "<button type='button' class='btn btn-success'>" + getCookie(i + "name" + j) + "</button> ";

        }else if(getCookie( i + 'choosed') == '-1'){
          document.getElementById(i + 'multiCorpus').innerHTML += "<button type='button' class='btn btn-info' onclick='optionChoice(" + i + ", " + j + ")'>" + getCookie(i + "name" + j) + "</button> ";

        }else{
          document.getElementById(i + 'multiCorpus').innerHTML += "<button type='button' class='btn btn-default'>" + getCookie(i + "name" + j) + "</button> ";
        }
      }
    }

    if(getCookie(i + "cat") == 'q'){
      document.getElementById(i + 'messageCorpus').innerHTML += "<div id='" + i + "questionCorpus' class='multiCorpus' ></div>";

      if(getCookie(i + 'code') == 'photo'){
        document.getElementById(i + 'questionCorpus').innerHTML += "<form action='http://54.171.115.230:8080/chattest', method='POST', enctype='multipart/form-data' target='' ><input type='text' name='currentPage' value='" + window.location.href + "' placeholder='" + window.location.href + "' readonly='true' ><input type='file' accept='image/*;capture=camera'><input type='file' name='img' id='inputImg'><button type='submit' class='btn btn-success'></button></form>";

      }else{

        if(!getCookie(i + 'answer')){
          document.getElementById(i + 'questionCorpus').innerHTML += "<input id='" + i + "inputCorpus' type='" + getCookie(i + 'sType') + " class='inputCorpus'> <button class='btn btn-info' onclick='javascript:conversationInput(" + i + ")'>Validate</button>";

        }else{
          document.getElementById(i + 'questionCorpus').innerHTML += "<p class='bg-success'>" + getCookie(i + 'answer') + "</p>";
        }
      }
    }

    if(getCookie(i + "cat") == 'c'){
      document.getElementById(i + 'messageCorpus').innerHTML += "<div id='" + i + "colorCorpus' class='colorCorpus' ></div>";
      for (var j = 0; j < getCookie( i + 'nbEntities'); j++) {

        if(getCookie(i + 'hex' + j)) {
          document.getElementById(i + 'colorCorpus').innerHTML += "<div id='" + i + "colorSample" + j + "' class='colorSample'></div> ";
          document.getElementById(i + "colorSample" + j).style.backgroundColor = getCookie(i + 'hex' + j);
        }

        if (getCookie(i + 'imgUrl' + j)) {
          document.getElementById(i + 'colorCorpus').innerHTML += "<img id='" + i + "colorSample" + j + "' class='colorSample'></img> ";
          document.getElementById(i + "colorSample" + j).src = getCookie(i + 'imgUrl' + j);
        }

      }
    }

  }
}

function displayModal(messageId, imgId){

  document.getElementById('presentation').innerHTML = "<span class='close' onclick='document.getElementById('myModal').style.display='none''>X</span><img class='modal-content' id='img01'><a class='prev' id='prev'>&#10094;</a><a class='next' id='next'>&#10095;</a><div id='caption'><p id='coment'></p></div>";

  var modal = document.getElementById('presentation');
  var modalImg = document.getElementById('img01');
  var captionText = document.getElementById('coment');

  modal.style.display = "block";
  modalImg.src = getCookie(messageId + "imgUrl" + imgId);
  captionText.innerHTML = "<h5><a target='_blank' href='" + getCookie(messageId + "imgLink" + imgId) + "'>" + getCookie(messageId + 'productName' + imgId); + "</a></h5><br/>"
  captionText.innerHTML += "<p>" + getCookie(messageId + "shortDesc" + imgId) + "<br/>" + getCookie(messageId + "longDesc" + imgId) + "</p>";

  var span = document.getElementsByClassName("close")[0];

  modalImg.onclick = function() {
    modal.style.display = "none";
    var nextImgId = (imgId + 1) % getCookie(messageId + "nbEntities");
    displayModal(messageId, nextImgId);
  }

  document.getElementById('next').onclick = function() {
    modal.style.display = "none";
    var nextImgId = (imgId + 1) % getCookie(messageId + "nbEntities");
    displayModal(messageId, nextImgId);
  }

  document.getElementById('prev').onclick = function() {
    modal.style.display = "none";
    var nextImgId = (imgId + 2*getCookie(messageId + "nbEntities") -1) % getCookie(messageId + "nbEntities");
    displayModal(messageId, nextImgId);
  }

  span.onclick = function() { 
    modal.style.display = "none";
  }

  window.onclick = function(event) {
    if (event.target == modal) {
      modal.style.display = "none";
    }
  }
}

function conversationInput(messageId){
  answer = document.getElementById(messageId + 'input').value;
  document.cookie = messageId + "answer = " + answer;

  var data = {name: '', code: '', sessionId: '', answer: ''};
  data.name = getCookie('user');
  data.code = getCookie(messageId + 'code' + getCookie(messageId + 'code'));
  data.sessionId = document.getElementById('sessionId').value;
  data.answer = answer;

  var chatRequest = "http://54.171.115.230:8080/chattest";
  var chatApi = new XMLHttpRequest();
  chatApi.open("POST", chatRequest);
  chatApi.setRequestHeader("Content-Type", "application/json");
  chatApi.send(JSON.stringify(data));

  chatApi.onreadystatechange = function () {
    if (chatApi.readyState == 4 && chatApi.status == 200) {
      responseAnalyse(chatApi.responseText);
    }
  }
  chatShow();
}

function optionChoice(messageId, UserChoice) {
  document.cookie = messageId + "choosed = " + UserChoice;

  var data = {name: '', code: '', sessionId: ''};
  data.name = getCookie('user');
  data.code = getCookie(messageId + 'code' + UserChoice);
  data.sessionId = document.getElementById('sessionId').value;

  var chatRequest = "http://54.171.115.230:8080/chattest";
  var chatApi = new XMLHttpRequest();
  chatApi.open("POST", chatRequest);
  chatApi.setRequestHeader("Content-Type", "application/json");
  chatApi.send(JSON.stringify(data));

  chatApi.onreadystatechange = function () {
    if (chatApi.readyState == 4 && chatApi.status == 200) {
      responseAnalyse(chatApi.responseText);
    }
  }
  chatShow();
}

// when a message is sent from the client side
function send() {

// stock of the message into the cookies
savingMessage();

// preparing the data to send to the external API
var data = {name: '', message: '', sessionId: '', giveMe: ''};
data.name = getCookie('user');
data.message = document.getElementById('message').value;
data.sessionId = document.getElementById('sessionId').value;

if(document.getElementById('trueFalseProd').checked)
  data.giveMe = 'prod';
if(document.getElementById('trueFalseQuest').checked)
  data.giveMe = 'quest';
if(document.getElementById('trueFalseAge').checked)
  data.giveMe = 'age';
if(document.getElementById('trueFalseColors').checked)
  data.giveMe = 'colors';
if(document.getElementById('trueFalseText').checked)
  data.giveMe = 'text';
if(document.getElementById('trueFalseMulti').checked)
  data.giveMe = 'multi';
if(document.getElementById('trueFalsePhoto').checked)
  data.giveMe = 'photo';
if(document.getElementById('trueFalsePrice').checked)
  data.giveMe = 'price';
if(document.getElementById('trueFalseTimeout').checked)
  data.giveMe = 'timeout';

// prod, quest, age, colors, text, multi, photo, price, timeout

var chatRequest = "http://54.171.115.230:8080/chattest";
var chatApi = new XMLHttpRequest();
chatApi.open("POST", chatRequest);
chatApi.setRequestHeader("Content-Type", "application/json");
chatApi.send(JSON.stringify(data));


chatApi.onreadystatechange = function () {
  if (chatApi.readyState == 4 && chatApi.status == 200) {
    responseAnalyse(chatApi.responseText);
  }
}
chatShow();
}

//when the server give me an answer

function responseAnalyse(data){
  var json = JSON.parse(data);

  alert(JSON.stringify(json));

  messageId = parseInt(getCookie('messageId')) + 1;
  document.cookie = "messageId = " + messageId;
  document.cookie = messageId + "message = " + json.text;
  document.cookie = messageId + "author = Server";

  if(!json.isText){
    document.cookie = messageId + "cat = " + json.options.cat;

    if(json.options.cat == 'w'){
// alert('hey');
}

if(json.options.cat == 'p'){
  document.cookie = messageId + "nbEntities = " + json.options.values.length;
  for (var i = 0; i < json.options.values.length; i++) {
    document.cookie = messageId + "imgUrl" + i + " = " + json.options.values[i].imgURL;
    document.cookie = messageId + "imgLink" + i + " = " + json.options.values[i].imgLink;
    document.cookie = messageId + "longDesc" + i + " = " + json.options.values[i].longDesc;
    document.cookie = messageId + "shortDesc" + i + " = " + json.options.values[i].shortDesc;
    document.cookie = messageId + "productName" + i + " = " + json.options.values[i].name;
  }
}

if(json.options.cat == 'm'){
  document.cookie = messageId + "nbEntities = " + json.options.values.length;
  document.cookie = messageId + "choosed = " + -1;
  for (var i = 0; i < json.options.values.length; i++) {
    document.cookie = messageId + "name" + i + " = " + json.options.values[i].name;
    document.cookie = messageId + "code" + i + " = " + json.options.values[i].code;
  }
}

if(json.options.cat == 'q'){
  document.cookie = messageId + "nbEntities = 1";
  document.cookie = messageId + "sType = " + json.options.sType;
  document.cookie = messageId + "code = " + json.options.code;
}

if(json.options.cat == 'c'){
  document.cookie = messageId + "nbEntities = " + json.options.values.length;
  for (var i = 0; i < json.options.values.length; i++) {
    document.cookie = messageId + "name" + i + " = " + json.options.values[i].name;
    document.cookie = messageId + "link" + i + " = " + json.options.values[i].link;
    if(json.options.values[i].isHex){
      document.cookie = messageId + "hex" + i + " = " + json.options.values[i].hex;
    }
    if(!json.options.values[i].isHex){
      document.cookie = messageId + "imgUrl" + i + " = " + json.options.values[i].img;
    }
  }
}

}
chatShow();
}

// stock of the message into the cookies
function savingMessage(){
  var messageId = parseInt(getCookie('messageId')) + 1;
  document.cookie = "messageId = " + messageId;
  document.cookie = messageId + "message = " + document.getElementById('message').value;
  document.cookie = messageId + "author = " + getCookie('user');
}

function getCookie(cName) {
  var name = cName + "=";
  var ca = document.cookie.split(';');
  for(var i=0; i<ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0)==' ') {
      c = c.substring(1);
    }
    if (c.indexOf(name) == 0) {
      return c.substring(name.length, c.length);
    }
  }
  return "";
}

function chatListener(event) {
  if(event.charCode == 13){
    send();
  }
}

</script>


  <!--
  Client-side Templates
  ========================

  HTML templates are important prerequisites of modern, rich client applications.
  To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
  that you load these templates client-side.

  By default, your Gruntfile is configured to automatically load and precompile
  client-side JST templates in your `assets/templates` folder, then
  include them here automatically (between TEMPLATES and TEMPLATES END).

  To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
  For example, here are a few things you could do:

  + Import templates from other directories
  + Use a different template engine (handlebars, jade, dust, etc.)
  + Internationalize your client-side templates using a server-side
  stringfile before they're served.
-->

<!--TEMPLATES-->

<!--TEMPLATES END-->


  <!--

  Client-side Javascript
  ========================

  You can always bring in JS files manually with `script` tags, or asynchronously
  on the client using a solution like AMD (RequireJS).  Or, if you like, you can
  take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

  By default, files in your `assets/js` folder are included here
  automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
  CoffeeScript (.coffee) are supported. In production, your scripts will be minified
  and concatenated into a single file.

  To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
  For example, here are a few things you could do:

  + Change the order of your scripts
  + Import scripts from other directories
  + Use a different preprocessor, like TypeScript

-->

<!--SCRIPTS-->
<script src="/js/dependencies/sails.io.js"></script>
<script src="/js/dependencies/bootstrap.js"></script>
<script src="/js/dependencies/chat.js"></script>
<script src="/js/dependencies/jquery.min.js"></script>
<!--SCRIPTS END-->
</body>
</html>